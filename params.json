{
  "name": "Rxjava2-android-samples",
  "tagline": "RxJava2 Android Examples- Migration to RxJava2",
  "body": "# Learning RxJava2 for Android by example\r\n\r\n####This project is for : \r\n* who is migrating to RxJava 2 \r\n* or just started with RxJava.\r\n\r\n### Just Build the project and start learning RxJava by examples.\r\n\r\nRxJava 2.0 has been completely rewritten from scratch on top of the Reactive-Streams specification. The specification itself has evolved out of RxJava 1.x and provides a common baseline for reactive systems and libraries.\r\n\r\nBecause Reactive-Streams has a different architecture, it mandates changes to some well known RxJava types.\r\n\r\n\r\n# Migration From RxJava 1 to RxJava 2\r\n\r\nTo allow having RxJava 1 and RxJava 2 side-by-side, RxJava 2 is under the maven coordinates \r\nio.reactivex.rxjava2:rxjava:2.x.y and classes are accessible below io.reactivex.\r\n\r\nUsers switching from 1.x to 2.x have to re-organize their imports, but carefully.\r\n\r\n### Using RxJava 2.0 Library in your application\r\n\r\nAdd this in your build.gradle\r\n```groovy\r\ncompile 'io.reactivex.rxjava2:rxjava:2.0.0-RC1'\r\n```\r\nIf you are using RxAndroid also, then add the following\r\n```groovy\r\ncompile 'io.reactivex.rxjava2:rxandroid:2.0.0-RC1'\r\n```\r\n\r\n# RxJava2 Examples present in this sample project\r\n\r\n* RxJava 2.0 Example using `CompositeDisposable` as `CompositeSubscription` and `Subscription` have\r\nbeen removed.\r\n\r\n* RxJava 2 Example using `Flowable`.\r\n\r\n* RxJava 2 Example using `SingleObserver`, `CompletableObserver`.\r\n\r\n* RxJava 2 Example using RxJava2 operators such as `map, zip, take, reduce, flatMap, filter, buffer, skip, merge, concat, replay`, and much more:\r\n\r\n* RxJava 2 Android Samples using `Function` as `Func1` has been removed.\r\n\r\n* RxJava 2 Android Samples  using `BiFunction` as `Func2` has been removed.\r\n\r\n* And many others android examples\r\n\r\n# Quick Look on few changes done in RxJava2 over RxJava1\r\n\r\nRxJava1 -> RxJava2\r\n\r\n* `onCompleted` -> `onComplete` - without the trailing d\r\n* `Func1` -> `Function`\r\n* `Func2` -> `BiFunction`\r\n* `CompositeSubscription` -> `CompositeDisposable`\r\n* `limit` operator has been removed - Use `take` in RxJava2\r\n* and much more.\r\n\r\n# Operators :\r\n* `Map` -> transform the items emitted by an Observable by applying a function to each item\r\n* `Zip` -> combine the emissions of multiple Observables together via a specified function and emit single items for each combination based on the results of this function\r\n* `Filter` -> emit only those items from an Observable that pass a predicate test\r\n* `FlatMap` -> transform the items emitted by an Observable into Observables, then flatten the emissions from those into a single Observable\r\n* `Take` -> emit only the first n items emitted by an Observable\r\n* `Reduce` -> apply a function to each item emitted by an Observable, sequentially, and emit the final value\r\n* `Skip` -> suppress the first n items emitted by an Observable\r\n* `Buffer` -> periodically gather items emitted by an Observable into bundles and emit these bundles rather than emitting the items one at a time\r\n* `Concat` -> emit the emissions from two or more Observables without interleaving them\r\n* `Replay` -> ensure that all observers see the same sequence of emitted items, even if they subscribe after the Observable has begun emitting items\r\n* `Merge` -> combine multiple Observables into one by merging their emissions\r\n\r\n\r\n# Highlights of the examples :\r\n\r\n* [DisposableExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/DisposableExampleActivity.java) - Using `CompositeDisposable`\r\n* [FlowableExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/FlowableExampleActivity.java) - Using `Flowable` and `reduce` operator\r\n* [SingleObserverExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/SingleObserverExampleActivity.java) - Using `SingleObserver`\r\n* [CompletableObserverActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/CompletableObserverActivity.java) - Using `CompletableObserver`\r\n* [MapExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/MapExampleActivity.java) - Using `map` Operator\r\n* [ZipExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/ZipExampleActivity.java) - Using `zip` Operator\r\n* [BufferExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/BufferExampleActivity.java) - Using `buffer` Operator\r\n* [TakeExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/TakeExampleActivity.java) - Using `take` Operator\r\n* [ReduceExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/ReduceExampleActivity.java) - Using `reduce` Operator\r\n* [FilterExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/FilterExampleActivity.java) - Using `filter` Operator\r\n* [SkipExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/SkipExampleActivity.java) - Using `skip` Operator\r\n* [ReplayExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/ReplayExampleActivity.java) - Using `replay` Operator\r\n* [ConcatExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/ConcatExampleActivity.java) - Using `concat` Operator\r\n* [MergeExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/MergeExampleActivity.java) - Using `merge` Operator\r\n* [IntervalExampleActivity](https://github.com/amitshekhariitbhu/RxJava2-Android-Samples/blob/master/app/src/main/java/com/rxjava2/android/samples/IntervalExampleActivity.java) - Using `Interval`\r\n\r\n### TODO \r\n\r\n* Many examples are to be added \r\n\r\n### Show some :heart:\r\n* Be sure to click the :star: button in the upper right of this page. :v:\r\n\r\n### Contact - Let's become friend\r\n- [Twitter](https://twitter.com/amitiitbhu)\r\n- [Github](https://github.com/amitshekhariitbhu)\r\n- [Medium](https://medium.com/@amitshekhar)\r\n- [Facebook](https://www.facebook.com/amit.shekhar.iitbhu)\r\n\r\n### License\r\n```\r\n   Copyright (C) 2016 Amit Shekhar\r\n   Copyright (C) 2011 Android Open Source Project\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n```\r\n\r\n### Contributing to RxJava2 Android Samples\r\nJust make pull request. You are in!\r\n\r\n ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}